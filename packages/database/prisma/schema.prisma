// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  password      String?
  emailVerified DateTime?  @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  CartItem      CartItem[]
  messages      Message[]
  conversations Conversation[]

  @@map("users")
}


model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Category {
  id       String    @id @default(uuid())
  name     String
  products Product[]
}

model Product {
  id         String     @id @default(uuid())
  name       String
  desc       String
  img        String
  discount   Int
  mrp        Int
  sale       Int
  category   Category   @relation(fields: [categoryId], references: [id])
  cart       CartItem[]
  categoryId String
}

model CartItem {
  id        String  @id @default(uuid())
  quantity  Int?
  productId String
  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  userId    String
}

model Conversation{
  id String @id @default(uuid())
  participantsIds String[]
  participants User[]
  messageIds String[]
  messages Message[]
}

model Message{
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  body String
  senderId String
  sender User @relation(fields: [senderId],references: [id])
  conversationId String 
  conversations Conversation @relation(fields: [conversationId],references: [id])
}